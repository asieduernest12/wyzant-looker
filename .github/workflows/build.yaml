name: Release and publish on tag
on:
  workflow_dispatch:
  push:
    # tags:
      # - '*.*.*'
    branches: [master,main]

jobs:
  build:
#     if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 22 ]
    name: Node ${{ matrix.node }} sample
    steps:
      - uses: actions/checkout@v3
     
      # - name: update manifest version to release version
      #   run: |
      #       ext_version_name=${{github.ref_name}}
      #       echo $ext_version_name
      #       ext_version_id=$(echo $ext_version_name | tr -d [:alpha:] | tr -d [=-=])
      #       sed -i "s/0.0.8/$ext_version_id/" manifest.json
      #       sed -i "s/VERSION_NAME/$ext_version_name/" manifest.json
      
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      
      - name: Install dependencies
        run: |
          npm ci

      - name: configure git
        run: |
            git config user.email "release_user@actons.com"
            git config user.name "release-user"
      
      - name: bump tag
        run: |
            npm run release
            
      - name: Build and push tags
        run: |
          npm run prod
          npm run package
          git push --follow-tags origin main

      - name: Read version from package.json
        run: echo "VERSION=$(npm pkg get version)" >> $GITHUB_ENV
      
      # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   run: npx semantic-release
      
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/wyzant-looker.zip,dist/changelog.md,CHANGELOG.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          tag: ${{ env.VERSION }}
      
      - name: Upload to Chrome Web Store
        uses: mobilefirstllc/cws-publish@latest
        with:
          action: 'upload'  # one of: upload, publish, testers
          client_id: ${{ secrets.CLIENTID }}
          client_secret: ${{ secrets.CLIENTSECRET }}
          refresh_token: ${{ secrets.TOKEN }}
          extension_id: '32-CHAR EXTENSION ID' 
          zip_file: 'dist/wyzant-looker.zip'
